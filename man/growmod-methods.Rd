% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/growmod_methods.R
\name{growmod-methods}
\alias{growmod-methods}
\alias{compare}
\alias{compare.growmod}
\alias{compare.growmod_cv}
\alias{compare.growmod_multi}
\alias{compare.growmod_cv_multi}
\alias{plot.growmod}
\alias{plot.growmod_cv}
\alias{plot.growmod_multi}
\alias{plot.growmod_cv_multi}
\alias{summary.growmod}
\alias{summary.growmod_cv}
\alias{summary.growmod_multi}
\alias{summary.growmod_cv_multi}
\alias{print.growmod}
\alias{print.growmod_cv}
\alias{print.growmod_multi}
\alias{print.growmod_cv_multi}
\alias{fitted.growmod}
\alias{fitted.growmod_cv}
\alias{residuals.growmod}
\alias{residuals.growmod_cv}
\title{Methods for fitted growth models}
\usage{
compare(x, ...)

\method{compare}{growmod}(..., x)

\method{compare}{growmod_cv}(..., x)

\method{compare}{growmod_multi}(..., x)

\method{compare}{growmod_cv_multi}(..., x)

plot.growmod(x, ...)

plot.growmod_cv(x, ...)

plot.growmod_multi(x, group_blocks = TRUE, ...)

plot.growmod_cv_multi(x, ...)

\method{summary}{growmod}(x, ...)

\method{summary}{growmod_cv}(x, ...)

\method{summary}{growmod_multi}(x, ...)

\method{summary}{growmod_cv_multi}(x, ...)

\method{print}{growmod}(x, ...)

\method{print}{growmod_cv}(x, ...)

\method{print}{growmod_multi}(x, ...)

\method{print}{growmod_cv_multi}(x, ...)

\method{fitted}{growmod}(x, ...)

\method{fitted}{growmod_cv}(x, ...)

\method{residuals}{growmod}(x, ...)

\method{residuals}{growmod_cv}(x, ...)
}
\arguments{
\item{x}{fitted growmod, growmod_cv, growmod_multi, or growmod_cv_multi object}

\item{\dots}{parameters to be passed to the relevant internal methods}
}
\description{
Methods to print, summarise, compare, plot, and extract
  details from fitted growmod models.
}
\examples{
\dontrun {
  # simulate some data
  data_sim <- growth_data_sim(n = 100,
                              nblock = 5,
                              age_range = c(0, 50),
                              include_predictors = TRUE,
                              true_model = 'hillslope')

  # fit the correct model
  mod1 <- growmod(size ~ (age | block / predictors),
                  data = data_sim,
                  model = 'hillslope',
                  n_iter = 1000,
                  n_burnin = 500,
                  n_chains = 2,
                  stan_cores = 1)

  # plot the fitted model
  plot(mod1)
  hist(residuals(mod1))
  
  # summarise the fitted model
  summary(mod1)
  
  # print the fitted model
  print(mod1)

  # cross validate the fitted model
  mod1_cv <- validate(mod1)
  
  # summarise the cross validation performance
  summary(mod1_cv)
                   
  # fit an incorrect model
  mod2 <- growmod(size ~ (age | block / predictors),
                  data = data_sim,
                  model = 'koblog',
                  n_iter = 1000,
                  n_burnin = 500,
                  n_chains = 2,
                  stan_cores = 1)

  # compare the fitted models using summary measures of fit
  compare(mod1, mod2)
  
  # compare the fitted models using cross validation
  mod2_cv <- validate(mod2)
  compare(mod1_cv, mod2_cv)
  
}

}
